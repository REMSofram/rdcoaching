# Task Programme: Gestion des programmes d'entraînement

## Overview
**Priority:** High  
**Dependencies:** Task 4 (Structure & Layouts)  
**Status:** Pending  

## Description
Implémenter la fonctionnalité de gestion des programmes d'entraînement permettant au coach de créer et assigner des programmes aux clients, et aux clients de consulter leurs programmes assignés.

## Details
Créer l'interface de gestion des programmes côté coach et l'affichage côté client, avec persistance en base de données Supabase.

## Test Strategy
1. Vérifier que le coach peut créer et assigner des programmes
2. Tester que les clients voient uniquement leurs programmes assignés
3. Vérifier la persistance des données en base
4. Tester la cohérence UI avec le design existant

## Subtasks

### 5.1 Créer le schéma base de données
- **Description:** Ajouter la table `programs` dans Supabase (version simple MVP)
- **Table à créer:**
  ```sql
  -- Table programs
  id (uuid, primary key)
  coach_id (uuid, foreign key vers profiles)
  client_id (uuid, foreign key vers profiles) 
  title (text)
  content (text) -- contenu libre du programme
  is_active (boolean, default true)
  created_at (timestamptz)
  updated_at (timestamptz)
  ```
- **Estimated Time:** 15 minutes

### 5.2 Créer les types TypeScript
- **Description:** Ajouter `types/Program.ts` avec les interfaces pour programmes et jours
- **Interfaces à créer:**
  ```typescript
  interface Program {
    id: string;
    client_id: string;
    title: string;
    is_active: boolean;
    created_at: string;
    updated_at: string;
    program_days?: ProgramDay[];
  }
  
  interface ProgramDay {
    id: string;
    program_id: string;
    day_title: string;
    content: string;
    day_order: number;
    created_at: string;
    updated_at: string;
  }
  
  interface CreateProgramInput {
    client_id: string;
    title: string;
    days: {
      day_title: string;
      content: string;
      day_order: number;
    }[];
  }
  ```
- **Estimated Time:** 15 minutes

### 5.3 Supprimer cette tâche
- **Description:** Cette tâche est fusionnée avec 5.4 pour plus de simplicité
- **Estimated Time:** 0 minutes

### 5.4 Créer la page de création/édition de programme côté Coach
- **Description:** Page avec onglets `pages/coach/client/[id]/programme.tsx`
- **Fonctionnalités:**
  - Titre général du programme en haut
  - Système d'onglets horizontaux (même style que "Suivi", "Programme", "Nutrition")
  - Chaque onglet = un jour d'entraînement
  - Bouton "+" pour ajouter un nouveau jour
  - Dans chaque onglet : titre du jour + grande textarea pour le contenu
  - Bouton "Enregistrer" global qui sauvegarde tout le programme
  - Bouton "Supprimer ce jour" sur chaque onglet (sauf s'il n'y en a qu'un)
  - Possibilité de réorganiser l'ordre des onglets (drag & drop simple ou flèches)
- **UI:** Réutiliser exactement le même style d'onglets que dans la navigation existante
- **Estimated Time:** 75 minutes

### 5.5 Créer la page Programme côté Client
- **Description:** Créer `pages/client/programme.tsx` avec onglets
- **Fonctionnalités:**
  - Titre du programme en haut avec date de mise à jour
  - Système d'onglets horizontaux (même style que la sidebar client)
  - Chaque onglet = un jour d'entraînement
  - Contenu affiché avec formatage préservé (white-space: pre-wrap)
  - Message si aucun programme assigné : "Aucun programme disponible pour le moment"
  - Navigation fluide entre les onglets
  - Affichage en lecture seule uniquement
- **UI:** Cohérent avec le design client existant
- **Estimated Time:** 35 minutes

### 5.6 Créer les services API Supabase
- **Description:** Créer `lib/programService.ts` avec les fonctions CRUD pour programmes et jours
- **Fonctions à implémenter:**
  ```typescript
  - createProgram(clientId: string, title: string, days: ProgramDayInput[])
  - updateProgram(programId: string, title: string, days: ProgramDayInput[])
  - getProgramWithDays(clientId: string)
  - deleteProgram(programId: string)
  - addProgramDay(programId: string, dayTitle: string, content: string, order: number)
  - updateProgramDay(dayId: string, dayTitle: string, content: string)
  - deleteProgramDay(dayId: string)
  - reorderProgramDays(programId: string, newOrder: {id: string, order: number}[])
  ```
- **Logique:** Un client = un seul programme actif avec plusieurs jours
- **Estimated Time:** 45 minutes

### 5.7 Intégrer dans la navigation existante
- **Description:** Ajouter les liens "Programme" dans les sidebars
- **Modifications:**
  - Activer l'onglet "Programme" dans `CoachLayout.tsx` pour la page client
  - Activer l'onglet "Programme" dans `ClientLayout.tsx`
  - Vérifier le routing et les liens
- **Estimated Time:** 15 minutes

### 5.8 Ajouter la gestion des permissions
- **Description:** Vérifier que seul le coach peut modifier, seul le client peut voir son programme
- **Sécurité:**
  - RLS policies dans Supabase
  - Vérifications côté client pour l'affichage
  - Protection des routes
- **Estimated Time:** 30 minutes

### 5.9 Tests et validation
- **Description:** Tester l'ensemble de la fonctionnalité
- **Tests à effectuer:**
  - Création de programme côté coach
  - Affichage côté client
  - Gestion des cas d'erreur (pas de programme, erreurs réseau)
  - Cohérence UI avec le reste de l'application
  - Responsive design
- **Estimated Time:** 30 minutes

### 5.11 Créer un composant d'onglets réutilisable
- **Description:** Créer `components/shared/TabSystem.tsx` pour gérer les onglets
- **Fonctionnalités:**
  - Composant générique pour afficher des onglets
  - Props: tabs (array), activeTab, onTabChange, style (coach/client)
  - Rendu identique aux onglets existants dans l'app
  - Support pour les actions sur les onglets (supprimer, réorganiser)
- **Utilisation:** Réutilisé côté coach et client pour la cohérence
- **Estimated Time:** 30 minutes
### 5.10 Améliorations futures (hors scope MVP)
- **Description:** Fonctionnalités à considérer pour les versions futures
- **Idées d'améliorations:**
  - Mise en forme riche (markdown, bold, listes)  
  - Templates de programmes prédéfinis
  - Duplication de jours d'entraînement
  - Glisser-déposer pour réorganiser les jours
  - Historique des programmes précédents
  - Photos/vidéos d'exercices par jour
- **Note:** Ces améliorations viendront naturellement une fois le MVP validé

## Total Estimated Time
270 minutes (4 heures 30 minutes)

## Notes techniques
- Deux tables : `programs` (programme principal) et `program_days` (jours d'entraînement)
- Un client = un seul programme actif avec plusieurs jours
- Système d'onglets horizontaux identique à la navigation existante
- Interface côté coach : création/édition avec gestion des onglets
- Interface côté client : consultation avec navigation par onglets
- Réutiliser les styles d'onglets existants pour la cohérence visuelle
- Utiliser `white-space: pre-wrap` pour préserver le formatage du texte
- Composant TabSystem réutilisable pour maintenir la cohérence

## Dépendances
- Tables Supabase créées et configurées
- Types TypeScript définis
- Services API implémentés avant les composants UI
- Tests de bout en bout après implémentation complète